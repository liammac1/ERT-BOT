import discord
import os

#web server import
from keepalive import keep_alive
#timing shit
from timingshit import timing_shit

#google bullshit
from google.oauth2 import service_account
from googleapiclient.discovery import build
SCOPES = ['https://www.googleapis.com/auth/spreadsheets']
SERVICE_ACCOUNT_FILE = 'keys.json'
creds = None
creds = service_account.Credentials.from_service_account_file(SERVICE_ACCOUNT_FILE,scopes=SCOPES)
SPREADSHEET_ID = os.environ['SpreadID']
service = build('sheets','v4',credentials=creds)
sheet = service.spreadsheets()



#runningLog = {}


def searchSheet(strWant):
  result = sheet.values().get(spreadsheetId = SPREADSHEET_ID, range = "log!A1:E120").execute()
  values = result.get('values',[])


  for i in range(len(values)):

    if values[i][0] == strWant:

      return i+1

  return None

#creating client instance (discord connection)
client = discord.Client()

#connecting
@client.event
async def on_ready():
  print("Connected as {0.user}".format(client))

#message recieved
@client.event
async def on_message(msg):
  #dont do shit for own msg
  if msg.author == client.user:
    return
  #see if command
  if msg.content.startswith('!ERT!LOG'):
    
    try:

      tmpMsg =  str(msg.author) + "," + msg.content

      msgContent = tmpMsg.split(',')

      #print(msgContent)

      
      for i in range(len(msgContent)):

        msgContent[i] = msgContent[i].strip()

        if '!ERT!LOG' in msgContent[i]:

          msgContent[i] = msgContent[i].replace('!ERT!LOG','')
          msgContent[i] = msgContent[i].strip()

        msgContent[i] = msgContent[i].lower()

      #print(msgContent)


      #runningLog[msgContent[0]]=msgContent
      aoa = [msgContent]
      sheet.values().append(spreadsheetId = SPREADSHEET_ID, range = "log!A1",valueInputOption="USER_ENTERED",body={"values":aoa}).execute()
      #print(runningLog)

      await msg.channel.send('Log recorded. Good luck.')

    except Exception as e:

      print(e)

      await msg.channel.send( 'ERROR: Log not recorded, try again. Proper format: \"!ERT!LOG Place you are going into, expected return time (IN MINUTES, EX: for 2 hours, enter 120), tools used to enter, contact info (*OPTIONAL*)\"' )


  if msg.content.startswith(os.environ['adminLog']):
    result = sheet.values().get(spreadsheetId = SPREADSHEET_ID, range = "log!A1:E120").execute()
    await msg.channel.send(result.get('values',[]))

  if msg.content.startswith('!ERT!SOURCE'):

    await msg.channel.send('https://github.com/liammac1/ERT-BOT')

  if msg.content.startswith('!ERT!HELP'):

    await msg.channel.send('Commands:\n\n!ERT!LOG: Messages starting with !ERT!LOG tell the bot to create a new log in order to make sure you stay safe. Format must be as follows:\n\"!ERT!LOG place you are going into, expected return time in minute format (gone for 2 hours? Enter 120 as the value), tools used to enter, and contact info (this last part is optional)\"\n\n!ERT!OUT: Logs a user out of the ERT bot. Please always log out after loggin in. Does not work if you have not yet logged in. Format: \"!ERT!OUT\". Does not need anything else but the command, so dont put anything else.\n\n!ERT!SOURCE: This will send you a link to the source code of the bot. Note that the writer of the code, Chappy, witholds the right to share information, such as tokens or key phrases.')



  if msg.content.startswith('!ERT!OUT'):
    
    try:
      tmp = str(msg.author).strip()
      tmp = tmp.lower()

      strClear = "A" + str(searchSheet(tmp)) + ":E" + str(searchSheet(tmp))
      sheet.values().clear(spreadsheetId = SPREADSHEET_ID, range = ("log!"+strClear)).execute()

      #del runningLog[tmp]
      await msg.channel.send('Thank you, ' + tmp + ", you have succesfully logged out.")
    except:
      await msg.channel.send('ERROR: Your login was not found. Make sure you check out with the same account you logged in with, and that you logged in in the first place.')


  if msg.content.startswith(os.environ['ADMIN_WARNING']):
    result = sheet.values().get(spreadsheetId = SPREADSHEET_ID, range = "log!A1:E120").execute()
    values = result.get('values',[])
    tmplist = []
    for i in values:
      try:
        print(i)
        if int(i[2].replace(" ","")) <= 0 : tmplist.append(i)
      except:
        continue
    tempc = client.get_channel(os.environ['ChannelID'])
    await tempc.send(tmplist)




timing_shit()
keep_alive()

#token, if you're looking at this as source code, fuck you, you cant see this value
client.run(os.environ['TOKEN'])
